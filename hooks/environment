#!/bin/bash
set -ueo pipefail
set -x

# Reads either a value or a list from plugin config
function plugin_read_list() {
  prefix_read_list "BUILDKITE_PLUGIN_META_ENV_$1"
}

# Reads either a value or a list from the given env prefix
function prefix_read_list() {
  local prefix="$1"
  local parameter="${prefix}_0"

  if [[ -n "${!parameter:-}" ]]; then
    local i=0
    local parameter="${prefix}_${i}"
    while [[ -n "${!parameter:-}" ]]; do
      echo "${!parameter}"
      i=$((i + 1))
      parameter="${prefix}_${i}"
    done
  elif [[ -n "${!prefix:-}" ]]; then
    echo "${!prefix}"
  fi
}

# Check agent meta-data exists
function plugin_check_metadata_exists() {
  buildkite-agent meta-data exists "$1"
}

# Read agent metadata for the plugin
function plugin_get_metadata() {
  buildkite-agent meta-data get "$1"
}

mapfile -t keys < <(plugin_read_list KEYS)

# Only run if we have repos
if [[ "${#keys[@]}" -gt 0 ]]; then
  for key in "${keys[@]}"; do
    if [[ $key =~ "=" ]]; then
      # This pattern matched should allow to correctly parse "this=that=t" as
      # key=this=that
      # env=t
      meta_key="${key%"="*}"              # Remove from $r the shortest part of "=" that matches the back end of $r
      meta_env="${key##*"="}"             # Remove from $r the longest part of "=" that matches the front end of $r
      meta_env="${meta_env:-${meta_key}}" # If no folder, use the local folder with the repo name
      meta_env="${meta_env^^}"            # Uppercase
    else
      meta_key="${key}"
      meta_env="${key^^}"
    fi
    if plugin_check_metadata_exists "${meta_key}"; then
      meta_content="$(plugin_get_metadata "${meta_key}")"
      export "${meta_env}"="${meta_content}"
    fi
  done
fi
